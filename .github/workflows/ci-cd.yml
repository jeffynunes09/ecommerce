name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - develop
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Listar todos os arquivos para verificar a estrutura do repositório
      - name: List all files in the repo
        run: |
          ls -la

      # Configuração do Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # Instalar dependências e rodar testes
      - name: Install dependencies and test
        run: |
          npm install
          npm run test

  dockerize-frontend:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      # Checkout do código novamente
      - name: Checkout code
        uses: actions/checkout@v4

      
      # Passo 3: Construir a imagem Docker
      - name: Build Docker image for Next.js
        run: |
         
          docker build --pull --rm -f "./Dockerfile" -t ecommerce:latest .
          
      # Login no DockerHub
      - name: Docker login
        uses: docker/login-action@v1
        with: 
            username: ${{ secrets.DOCKER_USERNAME }}
            password:  ${{ secrets.DOCKER_PASSWORD }}
       
      # Passo 4: Tag e Push da imagem Docker para o DockerHub
      - name: Tag and Push Docker image to DockerHub
        run: |
          # Tag da imagem
          docker tag ecommerce:latest ${{ secrets.DOCKER_USERNAME }}/ecommerce:latest
          
          # Push da imagem para o DockerHub
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce:latest
